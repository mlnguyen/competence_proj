library(lsr)
library(lme4)
library(lmerTest) #provides p values
library(lsmeans) #multiple comparisons
library(lattice) #looks at random effects
library(ggplot2)
# read in data
datafile = '/Users/Mai/Projects/linkedin/resume_ratings/data/resume_data.csv';
data <- read.csv(file=datafile, header=TRUE, sep=",");
# look at start of data
head(data)
# read in data
#datafile = '/Users/Mai/Projects/linkedin/resume_ratings/data/resume_data.csv';
datafile = '/Users/Mai/Projects/linkedin/1_exp1/data/resume_data.csv'
data <- read.csv(file=datafile, header=TRUE, sep=",");
data.mean = aggregate(list(data_good$hire, data_good$salary, data_good$profileTime, data_good$respTime),
by = list(data_good$subN, data_good$resumeType, data_good$photoType),
FUN = 'mean')
colnames(data.mean) = c('sub', 'resumeType', 'photoType', 'hire', 'salary', 'profileTime', 'respTime')
# Get correlations of hire/salary ratings
subids = unique(data$subN)
r = numeric(length(subids))
p = numeric(length(subids))
sig = numeric(length(subids))
# Get correlations of hire/salary ratings
subids = unique(data$subN)
r = numeric(length(subids))
p = numeric(length(subids))
sig = numeric(length(subids))
for (i in seq_along(subids)){
subid = paste('sub', i-1, sep='')
subdata = data[data$subN==subid,]
stats = cor.test(subdata$hire, subdata$salary)
r[i] = stats$estimate
p[i] = stats$p.value
if (p[i] < .05){
sig[i] = 1;
}
}
sub_corrs = data.frame(subids, r,p,sig)
# reorder by r value
sub_corrs = sub_corrs[order(sub_corrs$r),]
# remove subjects with non sig correlations
nonsig = sub_corrs[sub_corrs$sig==0,]
data_good = data[!(data$subN %in% nonsig$subids),]
# plot subject correlations
lastnonsig = nonsig[nrow(nonsig),]$r
ggplot(sub_corrs, aes(seq_along(subids), r)) +
geom_bar(stat = "identity") +
geom_hline(yintercept=lastnonsig, linetype="dashed", color = "red") +
labs(title='Hire-salary correlation', x='sub', 'y'='r')
# aggregate data
data.mean = aggregate(list(data_good$hire, data_good$salary, data_good$profileTime, data_good$respTime),
by = list(data_good$subN, data_good$resumeType, data_good$photoType),
FUN = 'mean')
colnames(data.mean) = c('sub', 'resumeType', 'photoType', 'hire', 'salary', 'profileTime', 'respTime')
hire.aov <- with(data.mean, aov(hire ~ resumeType * photoType + Error(sub/resumeType)))
summary(hire.aov)
data.mean
hire.aov <- with(data.mean, aov(hire ~ resumeType * photoType + Error(sub/resumeType)))
summary(hire.aov)
